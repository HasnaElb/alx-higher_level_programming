===============================
 Test case for 0-add_integer.py
===============================

This library is very simple, since it only has one function called
``add_integer()``.

Import my funtion
==================
::
    >>> add_integer = __import__('0-add_integer').add_integer

::

Normal test
===========
::

    >>> add_integer(1, 2)
    3

    >>> add_integer(100, -2)
    98

    >>> add_integer(3.2, 6)
    9
    >>> add_integer(1)
    99

::

raise error test
================
::

    >>> add_integer(None)

    >>> add_integer("School", 3)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(2, "School")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer((3,4), 4)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer({'s':3,'g':5}, {'s':3,'g':5})
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer([1,2,3], [2,6,8])
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

::
